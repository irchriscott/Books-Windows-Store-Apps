//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace BookApp
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::BookApp.BookApp_Windows_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace BookApp.BookApp_Windows_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[35];
            _typeNameTable[0] = "JISoft.RatingControl.Rating";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[2] = "Boolean";
            _typeNameTable[3] = "Int32";
            _typeNameTable[4] = "Windows.UI.Xaml.Style";
            _typeNameTable[5] = "Double";
            _typeNameTable[6] = "Windows.UI.Xaml.Controls.Orientation";
            _typeNameTable[7] = "JISoft.RatingControl.RatingItem";
            _typeNameTable[8] = "BookApp.BookDetail";
            _typeNameTable[9] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[10] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[11] = "BookApp.BookList";
            _typeNameTable[12] = "BookApp.BookReadView";
            _typeNameTable[13] = "BookApp.Common.BooleanToVisibilityConverter";
            _typeNameTable[14] = "Object";
            _typeNameTable[15] = "BookApp.BookSearchResult";
            _typeNameTable[16] = "System.Collections.Generic.Dictionary`2<String, System.Collections.Generic.IEnumerable`1<BookApp.Books>>";
            _typeNameTable[17] = "System.Collections.Generic.IEnumerable`1<BookApp.Books>";
            _typeNameTable[18] = "String";
            _typeNameTable[19] = "BookApp.Common.ObservableDictionary";
            _typeNameTable[20] = "BookApp.BookWebView";
            _typeNameTable[21] = "BookApp.GoogleBookSearchResult";
            _typeNameTable[22] = "System.Collections.Generic.Dictionary`2<String, System.Collections.Generic.IEnumerable`1<BookApp.Items>>";
            _typeNameTable[23] = "System.Collections.Generic.IEnumerable`1<BookApp.Items>";
            _typeNameTable[24] = "BookApp.GoogleBooksList";
            _typeNameTable[25] = "BookApp.HomePage";
            _typeNameTable[26] = "BookApp.MainPage";
            _typeNameTable[27] = "BookApp.MoochBookSearchResult";
            _typeNameTable[28] = "System.Collections.Generic.Dictionary`2<String, System.Collections.Generic.IEnumerable`1<BookApp.MoochBooks>>";
            _typeNameTable[29] = "System.Collections.Generic.IEnumerable`1<BookApp.MoochBooks>";
            _typeNameTable[30] = "BookApp.MoochBooksList";
            _typeNameTable[31] = "BookApp.ReadLocalBook";
            _typeNameTable[32] = "BookApp.Settings";
            _typeNameTable[33] = "Windows.UI.Xaml.Controls.SettingsFlyout";
            _typeNameTable[34] = "Windows.UI.Xaml.Controls.ContentControl";

            _typeTable = new global::System.Type[35];
            _typeTable[0] = typeof(global::JISoft.RatingControl.Rating);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[2] = typeof(global::System.Boolean);
            _typeTable[3] = typeof(global::System.Int32);
            _typeTable[4] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[5] = typeof(global::System.Double);
            _typeTable[6] = typeof(global::Windows.UI.Xaml.Controls.Orientation);
            _typeTable[7] = typeof(global::JISoft.RatingControl.RatingItem);
            _typeTable[8] = typeof(global::BookApp.BookDetail);
            _typeTable[9] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[10] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[11] = typeof(global::BookApp.BookList);
            _typeTable[12] = typeof(global::BookApp.BookReadView);
            _typeTable[13] = typeof(global::BookApp.Common.BooleanToVisibilityConverter);
            _typeTable[14] = typeof(global::System.Object);
            _typeTable[15] = typeof(global::BookApp.BookSearchResult);
            _typeTable[16] = typeof(global::System.Collections.Generic.Dictionary<global::System.String, System.Collections.Generic.IEnumerable<global::BookApp.Books>>);
            _typeTable[17] = typeof(global::System.Collections.Generic.IEnumerable<global::BookApp.Books>);
            _typeTable[18] = typeof(global::System.String);
            _typeTable[19] = typeof(global::BookApp.Common.ObservableDictionary);
            _typeTable[20] = typeof(global::BookApp.BookWebView);
            _typeTable[21] = typeof(global::BookApp.GoogleBookSearchResult);
            _typeTable[22] = typeof(global::System.Collections.Generic.Dictionary<global::System.String, System.Collections.Generic.IEnumerable<global::BookApp.Items>>);
            _typeTable[23] = typeof(global::System.Collections.Generic.IEnumerable<global::BookApp.Items>);
            _typeTable[24] = typeof(global::BookApp.GoogleBooksList);
            _typeTable[25] = typeof(global::BookApp.HomePage);
            _typeTable[26] = typeof(global::BookApp.MainPage);
            _typeTable[27] = typeof(global::BookApp.MoochBookSearchResult);
            _typeTable[28] = typeof(global::System.Collections.Generic.Dictionary<global::System.String, System.Collections.Generic.IEnumerable<global::BookApp.MoochBooks>>);
            _typeTable[29] = typeof(global::System.Collections.Generic.IEnumerable<global::BookApp.MoochBooks>);
            _typeTable[30] = typeof(global::BookApp.MoochBooksList);
            _typeTable[31] = typeof(global::BookApp.ReadLocalBook);
            _typeTable[32] = typeof(global::BookApp.Settings);
            _typeTable[33] = typeof(global::Windows.UI.Xaml.Controls.SettingsFlyout);
            _typeTable[34] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_Rating() { return new global::JISoft.RatingControl.Rating(); }
        private object Activate_7_RatingItem() { return new global::JISoft.RatingControl.RatingItem(); }
        private object Activate_8_BookDetail() { return new global::BookApp.BookDetail(); }
        private object Activate_11_BookList() { return new global::BookApp.BookList(); }
        private object Activate_12_BookReadView() { return new global::BookApp.BookReadView(); }
        private object Activate_13_BooleanToVisibilityConverter() { return new global::BookApp.Common.BooleanToVisibilityConverter(); }
        private object Activate_15_BookSearchResult() { return new global::BookApp.BookSearchResult(); }
        private object Activate_16_Dictionary() { return new global::System.Collections.Generic.Dictionary<global::System.String, System.Collections.Generic.IEnumerable<global::BookApp.Books>>(); }
        private object Activate_19_ObservableDictionary() { return new global::BookApp.Common.ObservableDictionary(); }
        private object Activate_20_BookWebView() { return new global::BookApp.BookWebView(); }
        private object Activate_21_GoogleBookSearchResult() { return new global::BookApp.GoogleBookSearchResult(); }
        private object Activate_22_Dictionary() { return new global::System.Collections.Generic.Dictionary<global::System.String, System.Collections.Generic.IEnumerable<global::BookApp.Items>>(); }
        private object Activate_24_GoogleBooksList() { return new global::BookApp.GoogleBooksList(); }
        private object Activate_25_HomePage() { return new global::BookApp.HomePage(); }
        private object Activate_27_MoochBookSearchResult() { return new global::BookApp.MoochBookSearchResult(); }
        private object Activate_28_Dictionary() { return new global::System.Collections.Generic.Dictionary<global::System.String, System.Collections.Generic.IEnumerable<global::BookApp.MoochBooks>>(); }
        private object Activate_30_MoochBooksList() { return new global::BookApp.MoochBooksList(); }
        private object Activate_31_ReadLocalBook() { return new global::BookApp.ReadLocalBook(); }
        private object Activate_32_Settings() { return new global::BookApp.Settings(); }
        private void MapAdd_16_Dictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Collections.Generic.IEnumerable<global::BookApp.Books>>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Collections.Generic.IEnumerable<global::BookApp.Books>)item;
            collection.Add(newKey, newItem);
        }
        private void MapAdd_19_ObservableDictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void MapAdd_22_Dictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Collections.Generic.IEnumerable<global::BookApp.Items>>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Collections.Generic.IEnumerable<global::BookApp.Items>)item;
            collection.Add(newKey, newItem);
        }
        private void MapAdd_28_Dictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Collections.Generic.IEnumerable<global::BookApp.MoochBooks>>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Collections.Generic.IEnumerable<global::BookApp.MoochBooks>)item;
            collection.Add(newKey, newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  JISoft.RatingControl.Rating
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_0_Rating;
                userType.AddMemberName("AllowSelectingZero");
                userType.AddMemberName("ReadOnly");
                userType.AddMemberName("RatingItemCount");
                userType.AddMemberName("FilledItemStyle");
                userType.AddMemberName("UnfilledItemStyle");
                userType.AddMemberName("Value");
                userType.AddMemberName("ShowSelectionHelper");
                userType.AddMemberName("Orientation");
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Boolean
                xamlType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Int32
                xamlType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Windows.UI.Xaml.Style
                xamlType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  Double
                xamlType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Windows.UI.Xaml.Controls.Orientation
                xamlType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  JISoft.RatingControl.RatingItem
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_7_RatingItem;
                userType.AddMemberName("StrokeThickness");
                xamlType = userType;
                break;

            case 8:   //  BookApp.BookDetail
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_8_BookDetail;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  BookApp.BookList
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_11_BookList;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  BookApp.BookReadView
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_12_BookReadView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  BookApp.Common.BooleanToVisibilityConverter
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_13_BooleanToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  Object
                xamlType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  BookApp.BookSearchResult
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_15_BookSearchResult;
                userType.AddMemberName("SearchResult");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  System.Collections.Generic.Dictionary`2<String, System.Collections.Generic.IEnumerable`1<BookApp.Books>>
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_16_Dictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 17:   //  System.Collections.Generic.IEnumerable`1<BookApp.Books>
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                xamlType = userType;
                break;

            case 18:   //  String
                xamlType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  BookApp.Common.ObservableDictionary
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_19_ObservableDictionary;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  BookApp.BookWebView
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_20_BookWebView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  BookApp.GoogleBookSearchResult
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_21_GoogleBookSearchResult;
                userType.AddMemberName("SearchResult");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  System.Collections.Generic.Dictionary`2<String, System.Collections.Generic.IEnumerable`1<BookApp.Items>>
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_22_Dictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  System.Collections.Generic.IEnumerable`1<BookApp.Items>
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                xamlType = userType;
                break;

            case 24:   //  BookApp.GoogleBooksList
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_24_GoogleBooksList;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  BookApp.HomePage
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_25_HomePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  BookApp.MainPage
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  BookApp.MoochBookSearchResult
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_27_MoochBookSearchResult;
                userType.AddMemberName("SearchResult");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  System.Collections.Generic.Dictionary`2<String, System.Collections.Generic.IEnumerable`1<BookApp.MoochBooks>>
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_28_Dictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  System.Collections.Generic.IEnumerable`1<BookApp.MoochBooks>
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                xamlType = userType;
                break;

            case 30:   //  BookApp.MoochBooksList
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_MoochBooksList;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  BookApp.ReadLocalBook
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_ReadLocalBook;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  BookApp.Settings
                userType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.SettingsFlyout"));
                userType.Activator = Activate_32_Settings;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  Windows.UI.Xaml.Controls.SettingsFlyout
                xamlType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 34:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    _otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Callisto.Callisto_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::JISoft.RatingControl.JRatingControl_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_Rating_AllowSelectingZero(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.AllowSelectingZero;
        }
        private void set_0_Rating_AllowSelectingZero(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.AllowSelectingZero = (global::System.Boolean)Value;
        }
        private object get_1_Rating_ReadOnly(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.ReadOnly;
        }
        private void set_1_Rating_ReadOnly(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.ReadOnly = (global::System.Boolean)Value;
        }
        private object get_2_Rating_RatingItemCount(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.RatingItemCount;
        }
        private void set_2_Rating_RatingItemCount(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.RatingItemCount = (global::System.Int32)Value;
        }
        private object get_3_Rating_FilledItemStyle(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.FilledItemStyle;
        }
        private void set_3_Rating_FilledItemStyle(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.FilledItemStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_4_Rating_UnfilledItemStyle(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.UnfilledItemStyle;
        }
        private void set_4_Rating_UnfilledItemStyle(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.UnfilledItemStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_5_Rating_Value(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.Value;
        }
        private void set_5_Rating_Value(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_6_Rating_ShowSelectionHelper(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.ShowSelectionHelper;
        }
        private void set_6_Rating_ShowSelectionHelper(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.ShowSelectionHelper = (global::System.Boolean)Value;
        }
        private object get_7_Rating_Orientation(object instance)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            return that.Orientation;
        }
        private void set_7_Rating_Orientation(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.Rating)instance;
            that.Orientation = (global::Windows.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_8_RatingItem_StrokeThickness(object instance)
        {
            var that = (global::JISoft.RatingControl.RatingItem)instance;
            return that.StrokeThickness;
        }
        private void set_8_RatingItem_StrokeThickness(object instance, object Value)
        {
            var that = (global::JISoft.RatingControl.RatingItem)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_9_BookSearchResult_SearchResult(object instance)
        {
            var that = (global::BookApp.BookSearchResult)instance;
            return that.SearchResult;
        }
        private void set_9_BookSearchResult_SearchResult(object instance, object Value)
        {
            var that = (global::BookApp.BookSearchResult)instance;
            that.SearchResult = (global::System.Collections.Generic.Dictionary<global::System.String, System.Collections.Generic.IEnumerable<global::BookApp.Books>>)Value;
        }
        private object get_10_BookSearchResult_DefaultViewModel(object instance)
        {
            var that = (global::BookApp.BookSearchResult)instance;
            return that.DefaultViewModel;
        }
        private object get_11_GoogleBookSearchResult_SearchResult(object instance)
        {
            var that = (global::BookApp.GoogleBookSearchResult)instance;
            return that.SearchResult;
        }
        private void set_11_GoogleBookSearchResult_SearchResult(object instance, object Value)
        {
            var that = (global::BookApp.GoogleBookSearchResult)instance;
            that.SearchResult = (global::System.Collections.Generic.Dictionary<global::System.String, System.Collections.Generic.IEnumerable<global::BookApp.Items>>)Value;
        }
        private object get_12_GoogleBookSearchResult_DefaultViewModel(object instance)
        {
            var that = (global::BookApp.GoogleBookSearchResult)instance;
            return that.DefaultViewModel;
        }
        private object get_13_MoochBookSearchResult_SearchResult(object instance)
        {
            var that = (global::BookApp.MoochBookSearchResult)instance;
            return that.SearchResult;
        }
        private void set_13_MoochBookSearchResult_SearchResult(object instance, object Value)
        {
            var that = (global::BookApp.MoochBookSearchResult)instance;
            that.SearchResult = (global::System.Collections.Generic.Dictionary<global::System.String, System.Collections.Generic.IEnumerable<global::BookApp.MoochBooks>>)Value;
        }
        private object get_14_MoochBookSearchResult_DefaultViewModel(object instance)
        {
            var that = (global::BookApp.MoochBookSearchResult)instance;
            return that.DefaultViewModel;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember xamlMember = null;
            global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "JISoft.RatingControl.Rating.AllowSelectingZero":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "AllowSelectingZero", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_Rating_AllowSelectingZero;
                xamlMember.Setter = set_0_Rating_AllowSelectingZero;
                break;
            case "JISoft.RatingControl.Rating.ReadOnly":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "ReadOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_Rating_ReadOnly;
                xamlMember.Setter = set_1_Rating_ReadOnly;
                break;
            case "JISoft.RatingControl.Rating.RatingItemCount":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "RatingItemCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_Rating_RatingItemCount;
                xamlMember.Setter = set_2_Rating_RatingItemCount;
                break;
            case "JISoft.RatingControl.Rating.FilledItemStyle":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "FilledItemStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_Rating_FilledItemStyle;
                xamlMember.Setter = set_3_Rating_FilledItemStyle;
                break;
            case "JISoft.RatingControl.Rating.UnfilledItemStyle":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "UnfilledItemStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_Rating_UnfilledItemStyle;
                xamlMember.Setter = set_4_Rating_UnfilledItemStyle;
                break;
            case "JISoft.RatingControl.Rating.Value":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_Rating_Value;
                xamlMember.Setter = set_5_Rating_Value;
                break;
            case "JISoft.RatingControl.Rating.ShowSelectionHelper":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "ShowSelectionHelper", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_Rating_ShowSelectionHelper;
                xamlMember.Setter = set_6_Rating_ShowSelectionHelper;
                break;
            case "JISoft.RatingControl.Rating.Orientation":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.Rating");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "Orientation", "Windows.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_Rating_Orientation;
                xamlMember.Setter = set_7_Rating_Orientation;
                break;
            case "JISoft.RatingControl.RatingItem.StrokeThickness":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("JISoft.RatingControl.RatingItem");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_RatingItem_StrokeThickness;
                xamlMember.Setter = set_8_RatingItem_StrokeThickness;
                break;
            case "BookApp.BookSearchResult.SearchResult":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookApp.BookSearchResult");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "SearchResult", "System.Collections.Generic.Dictionary`2<String, System.Collections.Generic.IEnumerable`1<BookApp.Books>>");
                xamlMember.Getter = get_9_BookSearchResult_SearchResult;
                xamlMember.Setter = set_9_BookSearchResult_SearchResult;
                break;
            case "BookApp.BookSearchResult.DefaultViewModel":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookApp.BookSearchResult");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "BookApp.Common.ObservableDictionary");
                xamlMember.Getter = get_10_BookSearchResult_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "BookApp.GoogleBookSearchResult.SearchResult":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookApp.GoogleBookSearchResult");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "SearchResult", "System.Collections.Generic.Dictionary`2<String, System.Collections.Generic.IEnumerable`1<BookApp.Items>>");
                xamlMember.Getter = get_11_GoogleBookSearchResult_SearchResult;
                xamlMember.Setter = set_11_GoogleBookSearchResult_SearchResult;
                break;
            case "BookApp.GoogleBookSearchResult.DefaultViewModel":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookApp.GoogleBookSearchResult");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "BookApp.Common.ObservableDictionary");
                xamlMember.Getter = get_12_GoogleBookSearchResult_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "BookApp.MoochBookSearchResult.SearchResult":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookApp.MoochBookSearchResult");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "SearchResult", "System.Collections.Generic.Dictionary`2<String, System.Collections.Generic.IEnumerable`1<BookApp.MoochBooks>>");
                xamlMember.Getter = get_13_MoochBookSearchResult_SearchResult;
                xamlMember.Setter = set_13_MoochBookSearchResult_SearchResult;
                break;
            case "BookApp.MoochBookSearchResult.DefaultViewModel":
                userType = (global::BookApp.BookApp_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("BookApp.MoochBookSearchResult");
                xamlMember = new global::BookApp.BookApp_Windows_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "BookApp.Common.ObservableDictionary");
                xamlMember.Getter = get_14_MoochBookSearchResult_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::BookApp.BookApp_Windows_XamlTypeInfo.XamlSystemBaseType
    {
        global::BookApp.BookApp_Windows_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::BookApp.BookApp_Windows_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::BookApp.BookApp_Windows_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::BookApp.BookApp_Windows_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


